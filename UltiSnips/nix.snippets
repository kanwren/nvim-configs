snippet clean-source
{ lib }:

path:

if !lib.canCleanSource path
then path
else lib.cleanSourceWith {
	src = lib.cleanSource path;
	filter = name: type:
		let
			baseName = baseNameOf (toString name);
			# Filetypes to ignore, e.g. ".nix"
			ignoreExts = [];
		in !lib.any (x: x) [
			((type == "regular") && (lib.any (ext: lib.hasSuffix ext baseName) ignoreExts))
			# Ignore git files
			((type == "directory") && (baseName == ".git"))
			((type == "regular") && (baseName == ".gitignore"))
		];
}
endsnippet

snippet fetcharchive
fetchGithubArchive = { owner, repo, rev, sha256 }: fetchTarball {
	url = "https://github.com/${owner}/${repo}/archive/${rev}.tar.gz";
	inherit sha256;
};
endsnippet

snippet fetchnixpkgs
fetchNixpkgs = { rev, sha256 }: builtins.fetchTarball {
	url = "https://github.com/nixos/nixpkgs/archive/${rev}.tar.gz";
	inherit sha256;
};
endsnippet

snippet fetchgh
fetchFromGitHub {
	owner = "${1}";
	repo = "${2}";
	rev = "${3}";
	sha256 = "${4}";
}
endsnippet

snippet texenv
texlive.combine {
	inherit (texlive)
		latexmk
		scheme-small;
}
endsnippet

